@page "/Bonus/Sudoku"
@using Algorithms
@using Algorithms.Bonus.Sudoku
@using PuzzleSolver.Pages.Bonus.Sudoku

<p class="p-1">
    This is a Sudoku solver, and it has really no relation with Advent Of Code !
</p>
<StepController TInput="Input" TSolutions="Solutions" TState="State" Input="@input">
    <p class="p-1">
        All empty cells are adorned with the count of potential numbers.
        When the count of potential numbers is greater than 1, we should make a guess and explore until an inconsistency arises (colored in red).
        The visualization displays a guessed number in blue.
        The number of dots under the numbers indicates the depth of the search.
    </p>
    @if (context.State!.Grid.Length == 81)
    {
        <Visualization State="context.State" Input="input"/>
    }
</StepController>
<InputData InputFiles=@files TInput="Input" Parser="Parser.Parse" @bind-Input=input />
@code
{
    private Input? input;
    private KeyValuePair<string, string>[] files = [
        new KeyValuePair<string,string>("Example 1",$"sample-data/Bonus/Sudoku/{PuzzleHelper.GetPuzzleTitle(typeof(Solutions)).Replace(" ", "")}.txt"),
    new KeyValuePair<string,string>("Example 2",$"sample-data/Bonus/Sudoku/{PuzzleHelper.GetPuzzleTitle(typeof(Solutions)).Replace(" ", "")}_full.txt")
    ];
}